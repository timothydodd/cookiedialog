name: Build and Push Documentation Docker Image

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'Dockerfile.docs'
      - '.github/workflows/docker-docs.yml'
  workflow_dispatch:

env:
  DOCKER_IMAGE: timdoddcool/cookiedialog

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
      full_sha: ${{ steps.vars.outputs.full_sha }}
      timestamp: ${{ steps.vars.outputs.timestamp }}
      tags: ${{ steps.meta.outputs.tags }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Get commit hash
      id: vars
      run: |
        echo "short_sha=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        echo "full_sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT
        echo "timestamp=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_IMAGE }}
        tags: |
          type=ref,event=branch
          type=sha,prefix=commit-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ steps.vars.outputs.short_sha }}
          type=raw,value=${{ steps.vars.outputs.timestamp }}-${{ steps.vars.outputs.short_sha }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.docs
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: ${{ env.DOCKER_IMAGE }}
        short-description: "CookieDialog Documentation - GDPR Cookie Consent Library"
        readme-filepath: ./README.md

  deploy-notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Deployment success
      run: |
        echo "‚úÖ Documentation Docker image built and pushed successfully!"
        echo "üê≥ Available tags:"
        echo "  - ${{ env.DOCKER_IMAGE }}:latest"
        echo "  - ${{ env.DOCKER_IMAGE }}:${{ needs.build-and-push.outputs.short_sha }}"
        echo "  - ${{ env.DOCKER_IMAGE }}:commit-${{ needs.build-and-push.outputs.short_sha }}"
        echo "üåê Run latest: docker run -p 8080:80 ${{ env.DOCKER_IMAGE }}:latest"
        echo "üåê Run commit: docker run -p 8080:80 ${{ env.DOCKER_IMAGE }}:${{ needs.build-and-push.outputs.short_sha }}"