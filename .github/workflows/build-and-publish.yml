name: Build and Publish

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
      continue-on-error: true  # Don't fail build for linting issues
    
    - name: Build library
      run: npm run build
    
    - name: Run tests
      run: npm test
      continue-on-error: true  # Don't fail build for test issues yet
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files-node-${{ matrix.node-version }}
        path: dist/
        retention-days: 30

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build library
      run: npm run build
    
    - name: Publish to NPM (on version tags)
      if: startsWith(github.ref, 'refs/tags/v')
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release (on version tags)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## üöÄ CookieDialog Release ${{ github.ref }}
          
          ### üì¶ Installation
          ```bash
          npm install cookiedialog@${{ github.ref_name }}
          ```
          
          ### üåê CDN Links
          ```html
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cookiedialog@${{ github.ref_name }}/dist/cookiedialog.min.css">
          <script src="https://cdn.jsdelivr.net/npm/cookiedialog@${{ github.ref_name }}/dist/cookiedialog.min.js"></script>
          ```
          
          ### üìÑ Documentation
          Visit [cookiedialog.com](https://cookiedialog.com) for full documentation.
    
    - name: Upload release assets
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cookiedialog.min.js
        asset_name: cookiedialog.min.js
        asset_content_type: application/javascript
    
    - name: Upload CSS release asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/cookiedialog.min.css
        asset_name: cookiedialog.min.css
        asset_content_type: text/css

  build-docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'npm'
        cache-dependency-path: 'docs/package-lock.json'
    
    - name: Install docs dependencies
      run: |
        cd docs
        npm ci
    
    - name: Build documentation
      run: |
        cd docs
        npm run build
    
    - name: Upload docs artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docs-build
        path: docs/dist/
        retention-days: 30